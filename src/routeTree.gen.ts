/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TermsRouteImport } from './routes/terms'
import { Route as PrivacyRouteImport } from './routes/privacy'
import { Route as AboutRouteImport } from './routes/about'
import { Route as MainLayoutRouteImport } from './routes/_mainLayout'
import { Route as MainLayoutIndexRouteImport } from './routes/_mainLayout.index'

const TermsRoute = TermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyRoute = PrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const MainLayoutRoute = MainLayoutRouteImport.update({
  id: '/_mainLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const MainLayoutIndexRoute = MainLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof AboutRoute
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/': typeof MainLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/': typeof MainLayoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_mainLayout': typeof MainLayoutRouteWithChildren
  '/about': typeof AboutRoute
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/_mainLayout/': typeof MainLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/about' | '/privacy' | '/terms' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/privacy' | '/terms' | '/'
  id:
    | '__root__'
    | '/_mainLayout'
    | '/about'
    | '/privacy'
    | '/terms'
    | '/_mainLayout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  MainLayoutRoute: typeof MainLayoutRouteWithChildren
  AboutRoute: typeof AboutRoute
  PrivacyRoute: typeof PrivacyRoute
  TermsRoute: typeof TermsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_mainLayout': {
      id: '/_mainLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_mainLayout/': {
      id: '/_mainLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainLayoutIndexRouteImport
      parentRoute: typeof MainLayoutRoute
    }
  }
}

interface MainLayoutRouteChildren {
  MainLayoutIndexRoute: typeof MainLayoutIndexRoute
}

const MainLayoutRouteChildren: MainLayoutRouteChildren = {
  MainLayoutIndexRoute: MainLayoutIndexRoute,
}

const MainLayoutRouteWithChildren = MainLayoutRoute._addFileChildren(
  MainLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  MainLayoutRoute: MainLayoutRouteWithChildren,
  AboutRoute: AboutRoute,
  PrivacyRoute: PrivacyRoute,
  TermsRoute: TermsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
